apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: coder-testing-pipeline
spec:
  params:
    - name: repo_url
      type: string
    - name: revision
      type: string
    - name: coder-helm-version
      type: string
    - name: template-name
      type: string
    - name: testing-namespace
      type: string
    - name: testing-tag
      type: string
  workspaces:
    - name: source
    - name: basic-auth
  tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: testing-coder-template
        runAfter:
            - fetch-repository
        workspaces:
          - name: template
            workspace: source
        params:
          - name: namespace
            value: $(params.testing-namespace)
          - name: tag
            value: $(params.testing-tag)
        taskSpec:
          workspaces:
            - name: template
              description: Terraform template for Coder workspaces
          params:
            - name: namespace
              type: string
            - name: tag
              type: string
            - name: coder-helm-version
              type: string
          steps:
            - name: create-template
              image: ghcr.io/sprint-cloud/pipeline-worker:82dc994798d9843640f67c1ac3384072757a3124
              workdir: $(workspaces.template.path)
              env:
                - name: CODER_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: coder-testing-auth
                      key: token
              script: |
                coder --token $CODER_TOKEN --url https://workspace-testing.luchtenberg.eu template create -y -d $(workspaces.template.path) PR-$(params.testing-tag)
              
  finally:
      - name: cleanup
        params:
          - name: namespace
            value: $(params.testing-namespace)
          - name: tag
            value: $(params.testing-tag)
        taskSpec:
          params:
            - name: namespace
              type: string
            - name: tag
              type: string
          steps:
            - name: create-vcluster
              image: ghcr.io/sprint-cloud/pipeline-worker:3bc7c6958c8b3b694b94c024a02cb5694a07a649
              script: |
                  vcluster delete workspace-test-$(params.tag) --namespace $(params.namespace)

    
                
